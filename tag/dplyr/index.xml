<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dplyr | State of The R</title>
    <link>http://stateofther.github.io/tag/dplyr/</link>
      <atom:link href="http://stateofther.github.io/tag/dplyr/index.xml" rel="self" type="application/rss+xml" />
    <description>dplyr</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>fr-fr</language><copyright>© 2020 State of the R</copyright><lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://stateofther.github.io/images/logo_hu53047fbf4f6efa69f0f91be25bd21dde_40228_300x300_fit_lanczos_3.png</url>
      <title>dplyr</title>
      <link>http://stateofther.github.io/tag/dplyr/</link>
    </image>
    
    <item>
      <title>Une introduction au tidyverse</title>
      <link>http://stateofther.github.io/post/une-introduction-au-tidyverse/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      <guid>http://stateofther.github.io/post/une-introduction-au-tidyverse/</guid>
      <description>


&lt;p&gt;Antoine nous propose une introduction dense et déjà avancée en passant en revue l’ensemble du &lt;a href=&#34;http://http://tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://abichat.github.io/Slides/IntroTidyverseSOTR/IntroTidyverseSOTR.html#1&#34;&gt;Les slides Xaringan de Antoine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Exercices autour de data.table</title>
      <link>http://stateofther.github.io/post/data.table/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      <guid>http://stateofther.github.io/post/data.table/</guid>
      <description>


&lt;p&gt;L’atelier du jour avait pour objectif la découvert du package &lt;a href=&#34;https://cran.r-project.org/web/packages/data.table/index.html&#34;&gt;data.table&lt;/a&gt; au travers d’&lt;a href=&#34;https://user2017.sched.com/event/Aw0L/datatable-for-beginners&#34;&gt;exercises proposés lors de la dernière édition de UseR&lt;/a&gt;. Les slides avec les énoncés sont &lt;a href=&#34;https://www.google.fr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwiZv7DE6I3XAhWCuBoKHcN5CREQFggrMAA&amp;amp;url=https%3A%2F%2Fchannel9.msdn.com%2FEvents%2FuseR-international-R-User-conferences%2FuseR-International-R-User-2017-Conference%2Fdatatable-for-beginners&amp;amp;usg=AOvVaw3N-q_5oW0-yMm8uz9hVisu&#34;&gt;disponibles ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;L’apport de notre atelier est d’avoir systématiquement essayé de traiter les questions avec
- les fonctionalités &lt;code&gt;R&lt;/code&gt; de &lt;em&gt;base&lt;/em&gt;
- les fonctionalités offertes par le &lt;em&gt;tidyverse&lt;/em&gt; (principalement &lt;em&gt;dplyr&lt;/em&gt;)
- les fonctionnalités du package &lt;em&gt;data.table&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pour les animateurs : vous êtes libre de compléter le post de blog. Nous ajouteroins des comparatifs en terme de temps de calcul plus tard (peut-être).&lt;/p&gt;
&lt;div id=&#34;préliminaires&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Préliminaires&lt;/h3&gt;
&lt;p&gt;C’est parti, on charge les packages requis&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(data.table)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Les exercices seront traités à l’aide de deux tables jouets, dont on propose des contreparties en
- object &lt;code&gt;data.frame&lt;/code&gt;
- object &lt;code&gt;tibble&lt;/code&gt;
- object &lt;code&gt;data.table&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(20170703L)
DF1 = data.frame(id = sample(1:2, 9L, TRUE), 
                 code = sample(letters[1:3], 9, TRUE), 
                 valA = 1:9, valB = 10:18, 
                 stringsAsFactors = FALSE)
DF2 = data.frame(id = c(3L, 1L, 1L, 2L, 3L), 
                 code = c(&amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;), 
                 mul = 5:1, stringsAsFactors = FALSE)
## corresponding data tibble
TB1 &amp;lt;- as.tibble(DF1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as.tibble()` is deprecated as of tibble 2.0.0.
## Please use `as_tibble()` instead.
## The signature and semantics have changed, see `?as_tibble`.
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB2 &amp;lt;- as.tibble(DF2)
## corresponding data tables
DT1 &amp;lt;- as.data.table(DF1)
DT2 &amp;lt;- as.data.table(DF2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;question-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 1&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subset all rows where id column equals 1 &amp;amp; code column is not equal to “c”&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base::subset(DF1, id == 1 &amp;amp; code != &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 1  1    a    1   10
## 2  1    a    2   11
## 4  1    a    4   13&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;with(DF1, DF1[id == 1 &amp;amp; code != &amp;quot;c&amp;quot;,])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 1  1    a    1   10
## 2  1    a    2   11
## 4  1    a    4   13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(TB1, id == 1 &amp;amp; code != &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##      id code   valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1 a         1    10
## 2     1 a         2    11
## 3     1 a         4    13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[id == 1 &amp;amp; code != &amp;quot;c&amp;quot;] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB
## 1:  1    a    1   10
## 2:  1    a    2   11
## 3:  1    a    4   13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 2&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Select valA and valB columns from DF1&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1[, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   valA valB
## 1    1   10
## 2    2   11
## 3    3   12
## 4    4   13
## 5    5   14
## 6    6   15
## 7    7   16
## 8    8   17
## 9    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(TB1, valA, valB)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 2
##    valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1    10
## 2     2    11
## 3     3    12
## 4     4    13
## 5     5    14
## 6     6    15
## 7     7    16
## 8     8    17
## 9     9    18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[ , .(valA,valB)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    valA valB
## 1:    1   10
## 2:    2   11
## 3:    3   12
## 4:    4   13
## 5:    5   14
## 6:    6   15
## 7:    7   16
## 8:    8   17
## 9:    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 3&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) for id &amp;gt; 1 as a 1-row, 2-col data.frame&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colSums(DF1[ DF1$id &amp;gt; 1, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## valA valB 
##   30   66&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% filter(id &amp;gt; 1) %&amp;gt;% select(valA, valB) %&amp;gt;% summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 2
##    valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1    30    66&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[id &amp;gt; 1, .(sum(valA), sum(valB))]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    V1 V2
## 1: 30 66&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 4&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Replace valB with valB+1 for all rows where code == “c”&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1$valB[DF1$code==&amp;quot;c&amp;quot;] = DF1$valB[DF1$code==&amp;quot;c&amp;quot;] + 1
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 1  1    a    1   10
## 2  1    a    2   11
## 3  1    c    3   13
## 4  1    a    4   13
## 5  1    c    5   15
## 6  2    a    6   15
## 7  2    a    7   16
## 8  2    c    8   18
## 9  2    b    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- TB1 %&amp;gt;% mutate(valB = ifelse(code == &amp;quot;c&amp;quot;, valB + 1,valB))
## TB1[TB1$code==&amp;quot;c&amp;quot;, ] &amp;lt;- filter(TB1, code==&amp;quot;c&amp;quot;) %&amp;gt;% mutate(valB= valB+1) # alternative solution
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 4
##      id code   valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         1    10
## 2     1 a         2    11
## 3     1 c         3    13
## 4     1 a         4    13
## 5     1 c         5    15
## 6     2 a         6    15
## 7     2 a         7    16
## 8     2 c         8    18
## 9     2 b         9    18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[code == &amp;quot;c&amp;quot;, valB := valB + 1L]
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB
## 1:  1    a    1   10
## 2:  1    a    2   11
## 3:  1    c    3   13
## 4:  1    a    4   13
## 5:  1    c    5   15
## 6:  2    a    6   15
## 7:  2    a    7   16
## 8:  2    c    8   18
## 9:  2    b    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 5&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Add a new column valC column with values equal to valB^2 - valA^2&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valC = valB^2 - valA^2)
## DF1$valC &amp;lt;- DF1$valB^2 - DF1$valA^2 # alternate solution
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  1    a    1   10   99
## 2  1    a    2   11  117
## 3  1    c    3   13  160
## 4  1    a    4   13  153
## 5  1    c    5   15  200
## 6  2    a    6   15  189
## 7  2    a    7   16  207
## 8  2    c    8   18  260
## 9  2    b    9   18  243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- mutate(TB1, valC = valB^2 - valA^2)
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 5
##      id code   valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         1    10    99
## 2     1 a         2    11   117
## 3     1 c         3    13   160
## 4     1 a         4    13   153
## 5     1 c         5    15   200
## 6     2 a         6    15   189
## 7     2 a         7    16   207
## 8     2 c         8    18   260
## 9     2 b         9    18   243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, valC := valB^2 - valA^2]
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC
## 1:  1    a    1   10   99
## 2:  1    a    2   11  117
## 3:  1    c    3   13  160
## 4:  1    a    4   13  153
## 5:  1    c    5   15  200
## 6:  2    a    6   15  189
## 7:  2    a    7   16  207
## 8:  2    c    8   18  260
## 9:  2    b    9   18  243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 6&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) grouped by id and code (i.e., for each unique combination of id,code)&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(.~ id + code, DF1, sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  1    a    7   34  369
## 2  2    a   13   31  396
## 3  2    b    9   18  243
## 4  1    c    8   28  360
## 5  2    c    8   18  260&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(DF1[, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)], list(DF1$id, DF1$code), sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Group.1 Group.2 valA valB
## 1       1       a    7   34
## 2       2       a   13   31
## 3       2       b    9   18
## 4       1       c    8   28
## 5       2       c    8   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% group_by(id, code) %&amp;gt;% summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 5
## # Groups:   id [2]
##      id code   valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         7    34   369
## 2     1 c         8    28   360
## 3     2 a        13    31   396
## 4     2 b         9    18   243
## 5     2 c         8    18   260&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, .(SumA=sum(valA), SumB = sum(valB)), by=list(id,code) ] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code SumA SumB
## 1:  1    a    7   34
## 2:  1    c    8   28
## 3:  2    a   13   31
## 4:  2    c    8   18
## 5:  2    b    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 7&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) grouped by id for id &amp;gt;= 2 &amp;amp; code %in% c(“a”, “c”)&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(.~ id , subset(DF1, id &amp;gt;=2 &amp;amp; code %in% c(&amp;quot;a&amp;quot;,&amp;quot;c&amp;quot;), -code), sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id valA valB valC
## 1  2   21   49  656&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% 
  group_by(id) %&amp;gt;% 
  filter(id &amp;gt;=2, code %in% c(&amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;)) %&amp;gt;% 
  select(-code, -valC) %&amp;gt;% 
  summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##      id  valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     2    21    49&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[ (id&amp;gt;=2) &amp;amp; code %in% c(&amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;) , .(SumA=sum(valA), SumB = sum(valB)), by=id ] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id SumA SumB
## 1:  2   21   49&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-8&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 8&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Replace valA with max(valA)-min(valA) grouped by code&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valA = rep(tapply(valA, code, function(x) diff(range(x)))[code]))
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  1    a    6   10   99
## 2  1    a    6   11  117
## 3  1    c    5   13  160
## 4  1    a    6   13  153
## 5  1    c    5   15  200
## 6  2    a    6   15  189
## 7  2    a    6   16  207
## 8  2    c    5   18  260
## 9  2    b    0   18  243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- TB1 %&amp;gt;% group_by(code) %&amp;gt;% mutate(valA= max(valA)-min(valA))
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 5
## # Groups:   code [3]
##      id code   valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         6    10    99
## 2     1 a         6    11   117
## 3     1 c         5    13   160
## 4     1 a         6    13   153
## 5     1 c         5    15   200
## 6     2 a         6    15   189
## 7     2 a         6    16   207
## 8     2 c         5    18   260
## 9     2 b         0    18   243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, &amp;quot;valA&amp;quot; := max(valA)-min(valA), by=code] 
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC
## 1:  1    a    6   10   99
## 2:  1    a    6   11  117
## 3:  1    c    5   13  160
## 4:  1    a    6   13  153
## 5:  1    c    5   15  200
## 6:  2    a    6   15  189
## 7:  2    a    6   16  207
## 8:  2    c    5   18  260
## 9:  2    b    0   18  243&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-9&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 9&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Create a new col named valD with max(valB)-min(valA) grouped by code&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valD = by(DF1, code, function(x) max(x$valB) - min(x$valA))[code])
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD
## 1  1    a    6   10   99   10
## 2  1    a    6   11  117   10
## 3  1    c    5   13  160   13
## 4  1    a    6   13  153   10
## 5  1    c    5   15  200   13
## 6  2    a    6   15  189   10
## 7  2    a    6   16  207   10
## 8  2    c    5   18  260   13
## 9  2    b    0   18  243   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-8&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- TB1 %&amp;gt;% group_by(code) %&amp;gt;% mutate(valD= max(valB)-min(valA))
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 6
## # Groups:   code [3]
##      id code   valA  valB  valC  valD
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         6    10    99    10
## 2     1 a         6    11   117    10
## 3     1 c         5    13   160    13
## 4     1 a         6    13   153    10
## 5     1 c         5    15   200    13
## 6     2 a         6    15   189    10
## 7     2 a         6    16   207    10
## 8     2 c         5    18   260    13
## 9     2 b         0    18   243    18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-8&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, &amp;quot;valD&amp;quot; := max(valB)-min(valA), by=code] 
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC valD
## 1:  1    a    6   10   99   10
## 2:  1    a    6   11  117   10
## 3:  1    c    5   13  160   13
## 4:  1    a    6   13  153   10
## 5:  1    c    5   15  200   13
## 6:  2    a    6   15  189   10
## 7:  2    a    6   16  207   10
## 8:  2    c    5   18  260   13
## 9:  2    b    0   18  243   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-10&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 10&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subset DF1 by DF2 on id,code column. That is, for each row of DF2$id, DF2$code, get valA and valB cols from DF1. Include rows that have no matches as well.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DF1, DF2[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)], by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.y=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD
## 1  1    a    6   13  153   10
## 2  1    a    6   10   99   10
## 3  1    a    6   11  117   10
## 4  1    c    5   13  160   13
## 5  1    c    5   15  200   13
## 6  2    c    5   18  260   13
## 7  3    b   NA   NA   NA   NA
## 8  3    d   NA   NA   NA   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-9&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;right_join(TB1, TB2 %&amp;gt;% select(id, code), by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 6
## # Groups:   code [4]
##      id code   valA  valB  valC  valD
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         6    10    99    10
## 2     1 a         6    11   117    10
## 3     1 c         5    13   160    13
## 4     1 a         6    13   153    10
## 5     1 c         5    15   200    13
## 6     2 c         5    18   260    13
## 7     3 b        NA    NA    NA    NA
## 8     3 d        NA    NA    NA    NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## inner_join to keep only rows present in tibbles, left_join to keep all rows from TB1
## anti_join to keep only rows from TB1 with no matching rows in TB2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-9&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DT1, DT2[ , .(id, code)], all.y = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC valD
## 1:  1    a    6   10   99   10
## 2:  1    a    6   11  117   10
## 3:  1    a    6   13  153   10
## 4:  1    c    5   13  160   13
## 5:  1    c    5   15  200   13
## 6:  2    c    5   18  260   13
## 7:  3    b   NA   NA   NA   NA
## 8:  3    d   NA   NA   NA   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-11&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 11&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Same as (10), but fetch just the first matching row of DF1 for each row of DF2$id, DF2$code. Exclude non-matching rows.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DF1[!duplicated(DF1[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)]), ],
      DF2[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)], by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD
## 1  1    a    6   10   99   10
## 2  1    c    5   13  160   13
## 3  2    c    5   18  260   13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-10&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% group_by(id, code) %&amp;gt;% slice(1) %&amp;gt;% ## first entry in each (id, code) group
  inner_join(select(TB2, id, code), by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 6
## # Groups:   id, code [3]
##      id code   valA  valB  valC  valD
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 a         6    10    99    10
## 2     1 c         5    13   160    13
## 3     2 c         5    18   260    13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-10&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DT1[, .SD[1], by = list(id, code)], ## first entry in each (id, code) group
      DT2[ , .(id, code)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC valD
## 1:  1    a    6   10   99   10
## 2:  1    c    5   13  160   13
## 3:  2    c    5   18  260   13&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-12&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 12&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;For every row of DF2$id, DF2$code that matches with DF1’s, update valA with valA*mul.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;transform(merge(DF1, DF2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.y=TRUE), valA = valA * mul)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD mul
## 1  1    a   24   13  153   10   4
## 2  1    a   24   10   99   10   4
## 3  1    a   24   11  117   10   4
## 4  1    c   15   13  160   13   3
## 5  1    c   15   15  200   13   3
## 6  2    c   10   18  260   13   2
## 7  3    b   NA   NA   NA   NA   5
## 8  3    d   NA   NA   NA   NA   1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-11&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;right_join(TB1, TB2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)) %&amp;gt;% mutate(valA = valA * mul)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 7
## # Groups:   code [4]
##      id code   valA  valB  valC  valD   mul
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1 a        24    10    99    10     4
## 2     1 a        24    11   117    10     4
## 3     1 c        15    13   160    13     3
## 4     1 a        24    13   153    10     4
## 5     1 c        15    15   200    13     3
## 6     2 c        10    18   260    13     2
## 7     3 b        NA    NA    NA    NA     5
## 8     3 d        NA    NA    NA    NA     1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-11&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT3 &amp;lt;- merge(DT1, DT2, all.y = TRUE)[ , &amp;quot;valA&amp;quot; := valA * mul]
show(DT3) ## je ne comprends pas pourquoi il faut utiliser show pour l&amp;#39;affichage&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC valD mul
## 1:  1    a   24   10   99   10   4
## 2:  1    a   24   11  117   10   4
## 3:  1    a   24   13  153   10   4
## 4:  1    c   15   13  160   13   3
## 5:  1    c   15   15  200   13   3
## 6:  2    c   10   18  260   13   2
## 7:  3    b   NA   NA   NA   NA   5
## 8:  3    d   NA   NA   NA   NA   1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-13&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 13&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Add a new column val to DF1 with values from DF2$mul where DF2$id, DF2$code matches with DF1’s. Rows that don’t match should have NA.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-8&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;transform(merge(DF1, DF2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.x = TRUE, sort = FALSE), mul = mul)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD mul
## 1  1    a    6   13  153   10   4
## 2  1    a    6   10   99   10   4
## 3  1    a    6   11  117   10   4
## 4  1    c    5   13  160   13   3
## 5  1    c    5   15  200   13   3
## 6  2    c    5   18  260   13   2
## 7  2    b    0   18  243   18  NA
## 8  2    a    6   15  189   10  NA
## 9  2    a    6   16  207   10  NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-12&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(TB1, TB2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 7
## # Groups:   code [3]
##      id code   valA  valB  valC  valD   mul
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1     1 a         6    10    99    10     4
## 2     1 a         6    11   117    10     4
## 3     1 c         5    13   160    13     3
## 4     1 a         6    13   153    10     4
## 5     1 c         5    15   200    13     3
## 6     2 a         6    15   189    10    NA
## 7     2 a         6    16   207    10    NA
## 8     2 c         5    18   260    13     2
## 9     2 b         0    18   243    18    NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-12&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DT1, DT2, all.x = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC valD mul
## 1:  1    a    6   10   99   10   4
## 2:  1    a    6   11  117   10   4
## 3:  1    a    6   13  153   10   4
## 4:  1    c    5   13  160   13   3
## 5:  1    c    5   15  200   13   3
## 6:  2    a    6   15  189   10  NA
## 7:  2    a    6   16  207   10  NA
## 8:  2    b    0   18  243   18  NA
## 9:  2    c    5   18  260   13   2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
