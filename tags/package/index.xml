<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Package on State of The R</title>
    <link>/tags/package/</link>
    <description>Recent content in Package on State of The R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <copyright>&amp;copy; 2017 State of the R</copyright>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/package/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Exercices autour de data.table</title>
      <link>/post/data.table/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data.table/</guid>
      <description>&lt;p&gt;L’atelier du jour avait pour objectif la découvert du package &lt;a href=&#34;https://cran.r-project.org/web/packages/data.table/index.html&#34;&gt;data.table&lt;/a&gt; au travers d’&lt;a href=&#34;https://user2017.sched.com/event/Aw0L/datatable-for-beginners&#34;&gt;exercises proposés lors de la dernière édition de UseR&lt;/a&gt;. Les slides avec les énoncés sont &lt;a href=&#34;https://www.google.fr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwiZv7DE6I3XAhWCuBoKHcN5CREQFggrMAA&amp;amp;url=https%3A%2F%2Fchannel9.msdn.com%2FEvents%2FuseR-international-R-User-conferences%2FuseR-International-R-User-2017-Conference%2Fdatatable-for-beginners&amp;amp;usg=AOvVaw3N-q_5oW0-yMm8uz9hVisu&#34;&gt;disponibles ici&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;L’apport de notre atelier est d’avoir systématiquement essayé de traiter les questions avec - les fonctionalités &lt;code&gt;R&lt;/code&gt; de &lt;em&gt;base&lt;/em&gt; - les fonctionalités offertes par le &lt;em&gt;tidyverse&lt;/em&gt; (principalement &lt;em&gt;dplyr&lt;/em&gt;) - les fonctionnalités du package &lt;em&gt;data.table&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pour les animateurs : vous êtes libre de compléter le post de blog. Nous ajouteroins des comparatifs en terme de temps de calcul plus tard (peut-être).&lt;/p&gt;
&lt;div id=&#34;preliminaires&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Préliminaires&lt;/h3&gt;
&lt;p&gt;C’est parti, on charge oles packages requis&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(data.table)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Les exercices seront traités à l’aide de deux tables jouets, dont on propose des contreparties en - object &lt;code&gt;data.frame&lt;/code&gt; - object &lt;code&gt;tibble&lt;/code&gt; - object &lt;code&gt;data.table&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(20170703L)
DF1 = data.frame(id = sample(1:2, 9L, TRUE), 
                 code = sample(letters[1:3], 9, TRUE), 
                 valA = 1:9, valB = 10:18, 
                 stringsAsFactors = FALSE)
DF2 = data.frame(id = c(3L, 1L, 1L, 2L, 3L), 
                 code = c(&amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;), 
                 mul = 5:1, stringsAsFactors = FALSE)
## corresponding data tibble
TB1 &amp;lt;- as.tibble(DF1)
TB2 &amp;lt;- as.tibble(DF2)
## corresponding data tables
DT1 &amp;lt;- as.data.table(DF1)
DT2 &amp;lt;- as.data.table(DF2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;question-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 1&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subset all rows where id column equals 1 &amp;amp; code column is not equal to “c”&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base::subset(DF1, id == 1 &amp;amp; code != &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 2  1    b    2   11
## 7  1    b    7   16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;with(DF1, DF1[id == 1 &amp;amp; code != &amp;quot;c&amp;quot;,])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 2  1    b    2   11
## 7  1    b    7   16&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(TB1, id == 1 &amp;amp; code != &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 4
##      id  code  valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1     b     2    11
## 2     1     b     7    16&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[id == 1 &amp;amp; code != &amp;quot;c&amp;quot;] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB
## 1:  1    b    2   11
## 2:  1    b    7   16&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 2&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Select valA and valB columns from DF1&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1[, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   valA valB
## 1    1   10
## 2    2   11
## 3    3   12
## 4    4   13
## 5    5   14
## 6    6   15
## 7    7   16
## 8    8   17
## 9    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(TB1, valA, valB)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 2
##    valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1     1    10
## 2     2    11
## 3     3    12
## 4     4    13
## 5     5    14
## 6     6    15
## 7     7    16
## 8     8    17
## 9     9    18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[ , .(valA,valB)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    valA valB
## 1:    1   10
## 2:    2   11
## 3:    3   12
## 4:    4   13
## 5:    5   14
## 6:    6   15
## 7:    7   16
## 8:    8   17
## 9:    9   18&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 3&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) for id &amp;gt; 1 as a 1-row, 2-col data.frame&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colSums(DF1[ DF1$id &amp;gt; 1, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## valA valB 
##   19   46&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% filter(id &amp;gt; 1) %&amp;gt;% select(valA, valB) %&amp;gt;% summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 2
##    valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1    19    46&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[id &amp;gt; 1, .(sum(valA), sum(valB))]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    V1 V2
## 1: 19 46&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-4&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 4&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Replace valB with valB+1 for all rows where code == “c”&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1$valB[DF1$code==&amp;quot;c&amp;quot;] = DF1$valB[DF1$code==&amp;quot;c&amp;quot;] + 1
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB
## 1  1    c    1   11
## 2  1    b    2   11
## 3  1    c    3   13
## 4  1    c    4   14
## 5  2    a    5   14
## 6  2    a    6   15
## 7  1    b    7   16
## 8  2    a    8   17
## 9  1    c    9   19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- TB1 %&amp;gt;% mutate(valB = ifelse(code == &amp;quot;c&amp;quot;, valB + 1,valB))
## TB1[TB1$code==&amp;quot;c&amp;quot;, ] &amp;lt;- filter(TB1, code==&amp;quot;c&amp;quot;) %&amp;gt;% mutate(valB= valB+1) # alternative solution
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 4
##      id  code  valA  valB
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     c     1    11
## 2     1     b     2    11
## 3     1     c     3    13
## 4     1     c     4    14
## 5     2     a     5    14
## 6     2     a     6    15
## 7     1     b     7    16
## 8     2     a     8    17
## 9     1     c     9    19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[code == &amp;quot;c&amp;quot;, valB := valB + 1L]
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB
## 1:  1    c    1   11
## 2:  1    b    2   11
## 3:  1    c    3   13
## 4:  1    c    4   14
## 5:  2    a    5   14
## 6:  2    a    6   15
## 7:  1    b    7   16
## 8:  2    a    8   17
## 9:  1    c    9   19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-5&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 5&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Add a new column valC column with values equal to valB^2 - valA^2&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-r-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base R&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valC = valB^2 - valA^2)
## DF1$valC &amp;lt;- DF1$valB^2 - DF1$valA^2 # alternate solution
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  1    c    1   11  120
## 2  1    b    2   11  117
## 3  1    c    3   13  160
## 4  1    c    4   14  180
## 5  2    a    5   14  171
## 6  2    a    6   15  189
## 7  1    b    7   16  207
## 8  2    a    8   17  225
## 9  1    c    9   19  280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- mutate(TB1, valC = valB^2 - valA^2)
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 5
##      id  code  valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     c     1    11   120
## 2     1     b     2    11   117
## 3     1     c     3    13   160
## 4     1     c     4    14   180
## 5     2     a     5    14   171
## 6     2     a     6    15   189
## 7     1     b     7    16   207
## 8     2     a     8    17   225
## 9     1     c     9    19   280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, valC := valB^2 - valA^2]
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC
## 1:  1    c    1   11  120
## 2:  1    b    2   11  117
## 3:  1    c    3   13  160
## 4:  1    c    4   14  180
## 5:  2    a    5   14  171
## 6:  2    a    6   15  189
## 7:  1    b    7   16  207
## 8:  2    a    8   17  225
## 9:  1    c    9   19  280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-6&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 6&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) grouped by id and code (i.e., for each unique combination of id,code)&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(.~ id + code, DF1, sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  2    a   19   46  585
## 2  1    b    9   27  324
## 3  1    c   17   57  740&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(DF1[, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)], list(DF1$id, DF1$code), sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Group.1 Group.2 valA valB
## 1       2       a   19   46
## 2       1       b    9   27
## 3       1       c   17   57&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% group_by(id, code) %&amp;gt;% summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
## # Groups:   id [?]
##      id  code  valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     b     9    27   324
## 2     1     c    17    57   740
## 3     2     a    19    46   585&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, .(SumA=sum(valA), SumB = sum(valB)), by=list(id,code) ] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code SumA SumB
## 1:  1    c   17   57
## 2:  1    b    9   27
## 3:  2    a   19   46&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-7&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 7&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Get sum(valA) and sum(valB) grouped by id for id &amp;gt;= 2 &amp;amp; code %in% c(“a”, “c”)&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;aggregate(.~ id , subset(DF1, id &amp;gt;=2 &amp;amp; code %in% c(&amp;quot;a&amp;quot;,&amp;quot;c&amp;quot;), -code), sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id valA valB valC
## 1  2   19   46  585&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 %&amp;gt;% 
  group_by(id) %&amp;gt;% 
  filter(id &amp;gt;=2, code %in% c(&amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;)) %&amp;gt;% 
  select(-code) %&amp;gt;% 
  summarise_all(sum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 4
##      id  valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     2    19    46   585&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[ (id&amp;gt;=2) &amp;amp; code %in% c(&amp;quot;a&amp;quot;, &amp;quot;c&amp;quot;) , .(SumA=sum(valA), SumB = sum(valB)), by=id ] &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id SumA SumB
## 1:  2   19   46&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-8&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 8&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Replace valA with max(valA)-min(valA) grouped by code&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-3&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valA = rep(tapply(valA, code, function(x) diff(range(x))), table(code)))
DF1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC
## 1  1    c    3   11  120
## 2  1    b    3   11  117
## 3  1    c    3   13  160
## 4  1    c    5   14  180
## 5  2    a    5   14  171
## 6  2    a    8   15  189
## 7  1    b    8   16  207
## 8  2    a    8   17  225
## 9  1    c    8   19  280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dplyr-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;dplyr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TB1 &amp;lt;- TB1 %&amp;gt;% group_by(code) %&amp;gt;% mutate(valA= max(valA)-min(valA))
TB1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 5
## # Groups:   code [3]
##      id  code  valA  valB  valC
##   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     c     8    11   120
## 2     1     b     5    11   117
## 3     1     c     8    13   160
## 4     1     c     8    14   180
## 5     2     a     3    14   171
## 6     2     a     3    15   189
## 7     1     b     5    16   207
## 8     2     a     3    17   225
## 9     1     c     8    19   280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data.table-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;data.table&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT1[, &amp;quot;valA&amp;quot; := max(valA)-min(valA), by=code] 
DT1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id code valA valB valC
## 1:  1    c    8   11  120
## 2:  1    b    5   11  117
## 3:  1    c    8   13  160
## 4:  1    c    8   14  180
## 5:  2    a    3   14  171
## 6:  2    a    3   15  189
## 7:  1    b    5   16  207
## 8:  2    a    3   17  225
## 9:  1    c    8   19  280&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-9&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 9&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Create a new col named valD with max(valB)-min(valA) grouped by code&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF1 &amp;lt;- transform(DF1, valD = rep(
  by(DF1[, c(&amp;quot;valA&amp;quot;, &amp;quot;valB&amp;quot;)], code, function(x) diff(range(x))), table(code))
)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-10&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 10&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subset DF1 by DF2 on id,code column. That is, for each row of DF2&lt;span class=&#34;math inline&#34;&gt;\(id, DF2\)&lt;/span&gt;code, get valA and valB cols from DF1. Include rows that have no matches as well.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-5&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DF1, DF2[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)], by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.y=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD
## 1  1    a   NA   NA   NA   NA
## 2  1    c    3   11  120   12
## 3  1    c    3   13  160   12
## 4  1    c    5   14  180   13
## 5  1    c    8   19  280   16
## 6  2    c   NA   NA   NA   NA
## 7  3    b   NA   NA   NA   NA
## 8  3    d   NA   NA   NA   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-11&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 11&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Same as (10), but fetch just the first matching row of DF1 for each row of DF2&lt;span class=&#34;math inline&#34;&gt;\(id, DF2\)&lt;/span&gt;code. Exclude non-matching rows.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-6&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;merge(DF1[!duplicated(DF1[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)]), ],
      DF2[, c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;)], by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.y=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD
## 1  1    a   NA   NA   NA   NA
## 2  1    c    3   11  120   12
## 3  2    c   NA   NA   NA   NA
## 4  3    b   NA   NA   NA   NA
## 5  3    d   NA   NA   NA   NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-12&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 12&lt;/h3&gt;
&lt;p&gt;_For every row of DF2&lt;span class=&#34;math inline&#34;&gt;\(id, DF2\)&lt;/span&gt;code that matches with DF1’s, update valA with valA*mul._&lt;/p&gt;
&lt;div id=&#34;base-7&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;transform(merge(DF1, DF2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.y=TRUE), valA = valA * mul)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD mul
## 1  1    a   NA   NA   NA   NA   4
## 2  1    c    9   11  120   12   3
## 3  1    c    9   13  160   12   3
## 4  1    c   15   14  180   13   3
## 5  1    c   24   19  280   16   3
## 6  2    c   NA   NA   NA   NA   2
## 7  3    b   NA   NA   NA   NA   5
## 8  3    d   NA   NA   NA   NA   1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;question-13&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Question 13&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Add a new column val to DF1 with values from DF2&lt;span class=&#34;math inline&#34;&gt;\(mul where DF2\)&lt;/span&gt;id, DF2$code matches with DF1’s. Rows that don’t match should have NA.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;base-8&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;base&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;transform(merge(DF1, DF2, by = c(&amp;quot;id&amp;quot;, &amp;quot;code&amp;quot;), all.x = TRUE, sort = FALSE), mul = mul)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id code valA valB valC valD mul
## 1  1    c    3   11  120   12   3
## 2  1    c    3   13  160   12   3
## 3  1    c    5   14  180   13   3
## 4  1    c    8   19  280   16   3
## 5  2    a    5   14  171   13  NA
## 6  1    b    3   11  117   12  NA
## 7  1    b    8   16  207   16  NA
## 8  2    a    8   17  225   16  NA
## 9  2    a    8   15  189   16  NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Atelier découverte LearnR</title>
      <link>/post/learnr/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/learnr/</guid>
      <description>&lt;!-- ## courriel --&gt;
&lt;!-- Pour learnR je dirai que c’est un outil intéressant pour réaliser des TP structurés selon une trame précise et pour lesquels on souhaite modifier les données. --&gt;
&lt;!-- Par contre, il me faudrait plus de temps pour voir comment exporter/sauvegarder les codes et sorties R dans un fichier (.R par exemple). --&gt;
&lt;!-- ### Jessica --&gt;
&lt;!-- avec Marie qui était sansordi, nous avons regardé le tuto de learnR et en particulier les différentes fonctionnalités qui pourraient permettre de récupérer les réponses des étudiants... On a conclu que c&#39;était plus du Shiny que du learnR. --&gt;
&lt;!-- On a vu les options --&gt;
&lt;!-- 3- sur la fonction `quiz( )`, on a cherché à ne pas faire apparaître de réponse et on a été surprises de voir qu&#39;en recompilant on voit encore ce qu&#39;on a répondu avant... --&gt;
&lt;!-- Bref, ça n&#39;a pas été très productif selon moi (même si ma machine a bien voulu faire ce que je demandais !) et ça a donné l&#39;impression qu&#39;on faisait tous un peu la même chose, il faudrait peut être décider en début d&#39;HappyR qui regarde quoi et se mettre en petits groupes pour traiter chacun une question spécifique, disons en 1h et préparer sur place une courte restitution aux autres (ce qui éviterait aussi la compilation de nos différents retours). C&#39;est peut être un peu utopique de se dire que c&#39;est faisable sans que personne n&#39;est déjà regardé plus en détails avant qu&#39;on se retrouve...  --&gt;
&lt;!-- De mon côté, j&#39;avais regardé rapidement quelles étaient les possibilités de générer des sujets différents et j&#39;ai trouvé un exemple de publipostage &#34;Mail merge&#34; qui peut permettre  de faire cela (au moins si &#39;l&#39;on souhaite juste générer N sujets au format PDF par exemple - ensuite il faut combiner avec du learnR et du Shiny si on veut aller jusqu&#39;à récupérer les réponses pour une notation d&#39;évaluation automatisée), cf pour ceux qui ça intéresse https://www.r-bloggers.com/mail-merge-with-rmarkdown/. --&gt;
&lt;!-- bonne compil&#39; et merci de t&#39;en charger --&gt;
&lt;!-- Jessica TRESSOU --&gt;
&lt;!-- ### Isabelle --&gt;
&lt;!-- Impressions sur learnR : outil sympathique quand on veut poser des questions via une interface WEB à des personnes. Mais se pose crucialement la question comment récupérer les réponses. --&gt;
&lt;!-- Merci pour cette initiative de StateoftheR qui va peut-être me permettre de pas trop perdre la main ou plutôt de raccrocher. Par contre, je ne pourrais pas être là le 20/10. Désolée. Réunion experts Anses oblige. --&gt;
&lt;!-- ### Maud --&gt;
&lt;!-- - le package produit des supports plus adaptés à des interventions de type tutoriel ou des auto-évaluations --&gt;
&lt;!-- - inconvénients liés à l&#39;indépendance des chunks; nécessite d&#39;ajouter des lignes de code dans le setup ou de faire des liens entre chunks (mais comment?) --&gt;
&lt;div id=&#34;vue-densemble&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Vue d’ensemble&lt;/h3&gt;
&lt;p&gt;Le package &lt;code&gt;learnr&lt;/code&gt; permet de créer des tutoriels (voir le &lt;a href=&#34;https://rstudio.github.io/learnr/&#34;&gt;site dédié&lt;/a&gt; ou &lt;a href=&#34;https://blog.rstudio.com/2017/07/11/introducing-learnr/&#34;&gt;le blog de présentation&lt;/a&gt;). Les tutoriels incluent du texte, des champs pour taper et exécuter des commandes &lt;code&gt;R&lt;/code&gt; (pouvant être pré-formatés) et des questionnaires à choix multiples. Les champs peuvent inclure des indices à afficher pour l’utilisateur ou des solutions. Pour fonctionner, le document créé au format Rmarkdown doit être envoyé sur un serveur shiny. Il est alors nécessaire de créér un compte sur &lt;a href=&#34;https://www.shinyapps.io/&#34;&gt;shinyapp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Avec uniquement le package &lt;code&gt;learnr&lt;/code&gt;, il est uniquement possible de vérifier que les réponses données aux questions à choix multiples sont les bonnes. Par contre, il n’est pas possible de vérifier les commandes &lt;code&gt;R&lt;/code&gt; tapées ni leur résultat. Un package &lt;a href=&#34;https://github.com/dtkaplan/checkr&#34;&gt;checkr&lt;/a&gt; disponible sur github doit permettre de faire ces vérifications.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;limitations&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Limitations&lt;/h3&gt;
&lt;p&gt;Des essais menés, il a été conclu que &lt;code&gt;learnr&lt;/code&gt; est un package intéressant mais qui ne permettra pas forcément de faire un TP complet de statistique sous R. Toutefois, il peut être employé pour :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;présenter certaines fonctions centrales en R en détaillant les différentes options et fournir des exemples à des étudiants en TP,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;faire une vignette d’un package développé sous R,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;proposer des auto-évaluations pour les étudiants.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous nous sommes heurtés à certaines limites :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;il n’est pas possible de récupérer les commandes tapées dans les champs &lt;code&gt;R&lt;/code&gt; par l’utilisateur ni les résultats correspondants. Ainsi un étudiant n’aura aucune trace de son travail si cet outil est employé pour le faire travailler en TP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;il n’est pas possible de récupérer les commandes tapées dans les champs &lt;code&gt;R&lt;/code&gt; ni les réponses aux questions à choix multiples afin de les centraliser et de s’en servir à des fins d’évaluations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;les “chunks” (environnement permettant de créer des champs &lt;code&gt;R&lt;/code&gt;) sont indépendants les uns des autres donc il est difficile de construire une progressivité dans un travail avec &lt;code&gt;learnr&lt;/code&gt;. On peut définir au début dans un chunk &lt;code&gt;setup&lt;/code&gt;, un environnement général qui sera commun à tous les champs &lt;code&gt;R&lt;/code&gt;. On peut également pour chaque chunk ajouter un chunk du même nom auquel on ajoute &lt;code&gt;-setup&lt;/code&gt; pour définir un environnement propre au champ correspondant.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;le document &lt;code&gt;learnr&lt;/code&gt; étant hébergé sur un serveur, l’importation des données ne peut pas être présentée de manière classique en local. Les données doivent être chargées à partir d’une adresse web.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;quelques-astuces-utiles&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Quelques astuces utiles :&lt;/h3&gt;
&lt;p&gt;1- &lt;code&gt;exercise.timelimit = 10&lt;/code&gt; permet de limiter le temps de réponses, &lt;code&gt;exercise.lines = 5&lt;/code&gt; pour définir le nombre de lignes de console permettant de répondre.&lt;/p&gt;
&lt;p&gt;2- il n’est pas possible de mettre à la fois &lt;code&gt;solution&lt;/code&gt; et &lt;code&gt;hint&lt;/code&gt;(en créant un nouveau chunk portant le même nom suivi de &lt;code&gt;-hint&lt;/code&gt; ou &lt;code&gt;-solution&lt;/code&gt; selon le cas ). Si on le fait, la solution devient le &lt;code&gt;next hint&lt;/code&gt;. On peut aussi mettre plusieurs &lt;code&gt;hint&lt;/code&gt; en ajoutant &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;-2&lt;/code&gt; pour les ordonner.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
